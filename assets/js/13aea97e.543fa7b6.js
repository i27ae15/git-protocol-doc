"use strict";(self.webpackChunkgit_protocol=self.webpackChunkgit_protocol||[]).push([[163],{8903:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"objects/commit","title":"Commit","description":"A Commit object in Git represents a snapshot of the repository\'s state. It is stored as a binary blob in the Git object database and links to its corresponding Tree and parent commits (if any).","source":"@site/docs/objects/commit.md","sourceDirName":"objects","slug":"/objects/commit","permalink":"/git-protocol-doc/docs/objects/commit","draft":false,"unlisted":false,"editUrl":"https://github.com/i27ae15/git-protocol-doc/docs/objects/commit.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Tree","permalink":"/git-protocol-doc/docs/objects/tree"}}');var s=n(4848),r=n(8453);const o={sidebar_position:3},c="Commit",l={},a=[{value:"Structure of a Commit Object",id:"structure-of-a-commit-object",level:2},{value:"Header",id:"header",level:3},{value:"Body",id:"body",level:3},{value:"Important Notes",id:"important-notes",level:2},{value:"Example Commit Object",id:"example-commit-object",level:2},{value:"Readable Breakdown",id:"readable-breakdown",level:3},{value:"Details to Note",id:"details-to-note",level:3},{value:"Decoding a Commit Object",id:"decoding-a-commit-object",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"commit",children:"Commit"})}),"\n",(0,s.jsx)(t.p,{children:"A Commit object in Git represents a snapshot of the repository's state. It is stored as a binary blob in the Git object database and links to its corresponding Tree and parent commits (if any)."}),"\n",(0,s.jsx)(t.h2,{id:"structure-of-a-commit-object",children:"Structure of a Commit Object"}),"\n",(0,s.jsx)(t.h3,{id:"header",children:"Header"}),"\n",(0,s.jsx)(t.p,{children:"The header contains:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Object Type"}),": Always ",(0,s.jsx)(t.code,{children:"commit"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Size"}),": The size of the file content in bytes."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Null Byte Separator"}),": A null byte (",(0,s.jsx)(t.code,{children:"\\x00"}),") separating the header from the content."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"body",children:"Body"}),"\n",(0,s.jsx)(t.p,{children:"The body of a Commit object is structured as follows:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Tree Line"}),": Links the commit to the Tree object representing the directory structure: ",(0,s.jsx)(t.code,{children:"tree <tree_hash>"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Parent Line(s)"})," (if any): Links to the parent commit(s). For merge commits, there will be one line per parent: ",(0,s.jsx)(t.code,{children:"parent <parent_hash>"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Author Line"}),": Specifies the name, email, timestamp, and timezone of the commit's author: ",(0,s.jsx)(t.code,{children:"author <name> <email> <timestamp> <timezone_offset>"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Committer Line"}),": Similar to the author line but refers to the person who committed the changes: ",(0,s.jsx)(t.code,{children:"committer <name> <email> <timestamp> <timezone_offset>"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Blank Line"}),": A single blank line (",(0,s.jsx)(t.code,{children:"\\x0A"}),") separates the metadata from the commit message."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Commit Message"}),": Contains the description of the changes made in this commit."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Null Byte Terminator"}),": A null byte (",(0,s.jsx)(t.code,{children:"\\x00"}),") marking the end of the commit object."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Line Separation"}),": Each metadata line ends with a newline character (",(0,s.jsx)(t.code,{children:"\\x0A"}),"), except for the commit message."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Spaces in Metadata"}),": There are spaces between elements in the metadata (e.g., between the author\u2019s name and email)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Blank Line Placement"}),": A blank line is required before the commit message."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example-commit-object",children:"Example Commit Object"}),"\n",(0,s.jsx)(t.p,{children:"An example commit object might look like this:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"commit 210\\x00tree b4d2d0140eae40e6f7f6503aa4eb7a7330379bf9\\x0A\nparent 8c4d92b5dcb71e928f662b3b5de8219a8cb61ff0\\x0A\nauthor Linus Torvalds <linus.torvalds@linux.com> 1587032664 +0530\\x0A\ncommitter Linus Torvalds <linus.torvalds@linux.com> 1587032664 +0530\\x0A\n\\x0A\nYour code is trash\\x00\n"})}),"\n",(0,s.jsx)(t.h3,{id:"readable-breakdown",children:"Readable Breakdown"}),"\n",(0,s.jsx)(t.p,{children:"For better understanding, the commit can be visualized as:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"commit 210\\x00\n\ntree b4d2d0140eae40e6f7f6503aa4eb7a7330379bf9\nparent 8c4d92b5dcb71e928f662b3b5de8219a8cb61ff0\nauthor Linus Torvalds <linus.torvalds@linux.com> 1587032664 +0530\ncommitter Linus Torvalds <linus.torvalds@linux.com> 1587032664 +0530\n\nYour code is trash\n"})}),"\n",(0,s.jsx)(t.h3,{id:"details-to-note",children:"Details to Note"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Tree Hash"}),": Links to the exact state of the directory."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Parent Commit Hash"}),": Ensures the continuity of the commit chain."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Timestamps and Timezone"}),": Provide temporal context for the commit."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Commit Message"}),": Summarizes the purpose of the commit."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"decoding-a-commit-object",children:"Decoding a Commit Object"}),"\n",(0,s.jsx)(t.p,{children:"To decode a commit object:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Read the Header"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Extract the object type (",(0,s.jsx)(t.code,{children:"commit"}),")."]}),"\n",(0,s.jsx)(t.li,{children:"Determine the size of the content."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Parse the Body"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Extract the tree hash, parent hash(es), author, and committer information."}),"\n",(0,s.jsx)(t.li,{children:"Identify the commit message after the blank line."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Validate the Structure"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Ensure proper line breaks and separators are present."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"By maintaining this structure, Git ensures each commit accurately represents the repository state, enabling precise version control and traceability."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(6540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);